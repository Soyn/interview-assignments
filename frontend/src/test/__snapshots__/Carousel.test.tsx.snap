// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`render empty page, if no item was passed 1`] = `
<div
  className="container text-center"
>
  Opps! Nothing!
</div>
`;

exports[`render right tree structure when passed items 1`] = `
<div
  className="w-full h-full relative overflow-hidden"
  onClick={[Function]}
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
>
  <div
    className="w-full h-full relative overflow-hidden"
  >
    <div
      className="w-full h-full carousel-card hidden active"
    >
      <div
        style={
          Object {
            "backgroundColor": "red",
          }
        }
      >
        test-0
      </div>
    </div>
    <div
      className="w-full h-full carousel-card hidden next"
    >
      <div
        style={
          Object {
            "backgroundColor": "red",
          }
        }
      >
        test-1
      </div>
    </div>
    <div
      className="w-full h-full carousel-card hidden next"
    >
      <div
        style={
          Object {
            "backgroundColor": "red",
          }
        }
      >
        test-2
      </div>
    </div>
  </div>
</div>
`;

exports[`render right tree structure when passed items 2`] = `
<div
  className="w-full h-full relative overflow-hidden"
  onClick={[Function]}
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
>
  <div
    className="w-full h-full relative overflow-hidden"
  >
    <div
      className="w-full h-full carousel-card hidden active"
    >
      <div
        style={
          Object {
            "backgroundColor": "red",
          }
        }
      >
        test-0
      </div>
    </div>
    <div
      className="w-full h-full carousel-card hidden next"
    >
      <div
        style={
          Object {
            "backgroundColor": "red",
          }
        }
      >
        test-1
      </div>
    </div>
    <div
      className="w-full h-full carousel-card hidden next"
    >
      <div
        style={
          Object {
            "backgroundColor": "red",
          }
        }
      >
        test-2
      </div>
    </div>
  </div>
  <div
    className="indicators flex flex-row items-center absolute p-1"
  >
    <div
      className="m-1 w-14 h-0.5 bg-gray-400"
    >
      <div
        className="h-full indicator-inner bg-gray-50 w-full"
        style={
          Object {
            "transitionDuration": "0",
          }
        }
      />
    </div>
    <div
      className="m-1 w-14 h-0.5 bg-gray-400"
    >
      <div
        className="h-full indicator-inner w-0"
        style={
          Object {
            "transitionDuration": "0",
          }
        }
      />
    </div>
    <div
      className="m-1 w-14 h-0.5 bg-gray-400"
    >
      <div
        className="h-full indicator-inner w-0"
        style={
          Object {
            "transitionDuration": "0",
          }
        }
      />
    </div>
  </div>
</div>
`;

exports[`render right tree structure when passed items 3`] = `
<div
  className="w-full h-full relative overflow-hidden"
  onClick={[Function]}
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
>
  <div
    className="w-full h-full relative overflow-hidden"
  >
    <div
      className="w-full h-full carousel-card hidden active"
    >
      <div
        style={
          Object {
            "backgroundColor": "red",
          }
        }
      >
        test-0
      </div>
    </div>
    <div
      className="w-full h-full carousel-card hidden next"
    >
      <div
        style={
          Object {
            "backgroundColor": "red",
          }
        }
      >
        test-1
      </div>
    </div>
    <div
      className="w-full h-full carousel-card hidden next"
    >
      <div
        style={
          Object {
            "backgroundColor": "red",
          }
        }
      >
        test-2
      </div>
    </div>
  </div>
  <button
    className="control-prev absolute w-1/5 h-full flex justify-start items-center text-gray-400 opacity-0 hover:opacity-100 transition-opacity duration-1000"
    data-testid="prev"
    onClick={[Function]}
    role="button"
  >
    <svg
      className="h-12 w-12"
      fill="none"
      stroke="currentColor"
      viewBox="0 0 24 24"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M15 19l-7-7 7-7"
        strokeLinecap="round"
        strokeLinejoin="round"
        strokeWidth={2}
      />
    </svg>
  </button>
  <button
    className="control-next absolute w-1/5 h-full  flex justify-end items-center text-gray-400 opacity-0 hover:opacity-100 transition-opacity duration-1000"
    data-testid="next"
    onClick={[Function]}
    role="button"
  >
    <svg
      className="h-12 w-12"
      fill="none"
      stroke="currentColor"
      viewBox="0 0 24 24"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M9 5l7 7-7 7"
        strokeLinecap="round"
        strokeLinejoin="round"
        strokeWidth={2}
      />
    </svg>
  </button>
</div>
`;

exports[`render right tree structure when passed items 4`] = `
<div
  className="w-full h-full relative overflow-hidden"
  onClick={[Function]}
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
>
  <div
    className="w-full h-full relative overflow-hidden"
  >
    <div
      className="w-full h-full carousel-card hidden active"
    >
      <div
        style={
          Object {
            "backgroundColor": "red",
          }
        }
      >
        test-0
      </div>
    </div>
    <div
      className="w-full h-full carousel-card hidden next"
    >
      <div
        style={
          Object {
            "backgroundColor": "red",
          }
        }
      >
        test-1
      </div>
    </div>
    <div
      className="w-full h-full carousel-card hidden next"
    >
      <div
        style={
          Object {
            "backgroundColor": "red",
          }
        }
      >
        test-2
      </div>
    </div>
  </div>
  <div
    className="indicators flex flex-row items-center absolute p-1"
  >
    <div
      className="m-1 w-14 h-0.5 bg-gray-400"
    >
      <div
        className="h-full indicator-inner bg-gray-50 w-full"
        style={
          Object {
            "transitionDuration": "0",
          }
        }
      />
    </div>
    <div
      className="m-1 w-14 h-0.5 bg-gray-400"
    >
      <div
        className="h-full indicator-inner w-0"
        style={
          Object {
            "transitionDuration": "0",
          }
        }
      />
    </div>
    <div
      className="m-1 w-14 h-0.5 bg-gray-400"
    >
      <div
        className="h-full indicator-inner w-0"
        style={
          Object {
            "transitionDuration": "0",
          }
        }
      />
    </div>
  </div>
  <button
    className="control-prev absolute w-1/5 h-full flex justify-start items-center text-gray-400 opacity-0 hover:opacity-100 transition-opacity duration-1000"
    data-testid="prev"
    onClick={[Function]}
    role="button"
  >
    <svg
      className="h-12 w-12"
      fill="none"
      stroke="currentColor"
      viewBox="0 0 24 24"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M15 19l-7-7 7-7"
        strokeLinecap="round"
        strokeLinejoin="round"
        strokeWidth={2}
      />
    </svg>
  </button>
  <button
    className="control-next absolute w-1/5 h-full  flex justify-end items-center text-gray-400 opacity-0 hover:opacity-100 transition-opacity duration-1000"
    data-testid="next"
    onClick={[Function]}
    role="button"
  >
    <svg
      className="h-12 w-12"
      fill="none"
      stroke="currentColor"
      viewBox="0 0 24 24"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M9 5l7 7-7 7"
        strokeLinecap="round"
        strokeLinejoin="round"
        strokeWidth={2}
      />
    </svg>
  </button>
</div>
`;
